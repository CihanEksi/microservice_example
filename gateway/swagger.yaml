swagger: '2.0'
info:
  contact: {}
  title: Gateway
  version: 1.0.0
host: 'localhost:2999'
basePath: /
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
paths:
  /customer-management/api/company/create:
    post:
      security:
        - Bearer: []
      consumes:
        - application/json
      produces:
        - text/plain
      parameters:
        - in: body
          name: body
          schema:
            properties:
              name:
                example: company 2
                type: string
            type: object
      responses:
        '201':
          description: create company
          headers:
            access-control-allow-origin:
              type: string
            connection:
              type: string
            content-length:
              type: string
            date:
              type: string
            etag:
              type: string
            x-powered-by:
              type: string
          schema:
            $ref: '#/definitions/Company'
      tags:
        - customer_management
        - company
      description: create company
      operationId: createCompany
      summary: create company
  /customer-management/api/company/list:
    get:
      security:
        - Bearer: []
      produces:
        - text/plain
      parameters:
        - in: query
          name: page
          type: string
        - in: query
          name: limit
          type: string
      responses:
        '200':
          description: list company
          headers:
            access-control-allow-origin:
              type: string
            connection:
              type: string
            content-length:
              type: string
            date:
              type: string
            etag:
              type: string
            x-powered-by:
              type: string
          schema:
            $ref: '#/definitions/CompanyListResponse'
      tags:
        - customer_management
        - company
      description: list company
      operationId: listCompany
      summary: list company
  /customer-management/api/company/{id}:
    parameters:
      - in: path
        name: id
        required: true
        type: string
    delete:
      security:
        - Bearer: []
      parameters: []
      responses:
        '204':
          description: delete company
          headers:
            access-control-allow-origin:
              type: string
            connection:
              type: string
            date:
              type: string
            x-powered-by:
              type: string
      tags:
        - customer_management
        - company
      description: delete company
      operationId: deleteCompany
      summary: delete company
  /customer-management/api/customer-notes/{customerId}/create:
    parameters:
      - description: customer Id
        in: path
        name: customerId
        required: true
        type: string
    post:
      security:
        - Bearer: []
      consumes:
        - application/json
      produces:
        - text/plain
      parameters:
        - in: body
          name: body
          schema:
            properties:
              note:
                example: test note to create
                type: string
            type: object
      responses:
        '201':
          description: create customer note
          headers:
            access-control-allow-origin:
              type: string
            connection:
              type: string
            content-length:
              type: string
            date:
              type: string
            etag:
              type: string
            x-powered-by:
              type: string
          schema:
            $ref: '#/definitions/CreateCustomerNoteResponse'
      tags:
        - customer_management
        - customer notes
      description: create customer note
      operationId: createCustomerNote
      summary: create customer note
  /customer-management/api/customer-notes/{customerNoteId}:
    parameters:
      - description: customer-note Id
        in: path
        name: customerNoteId
        required: true
        type: string
    delete:
      security:
        - Bearer: []
      parameters: []
      responses:
        '204':
          description: delete customer note
          headers:
            access-control-allow-origin:
              type: string
            connection:
              type: string
            date:
              type: string
            x-powered-by:
              type: string
      tags:
        - customer_management
        - customer notes
      description: delete customer note
      operationId: deleteCustomerNote
      summary: delete customer note
    put:
      security:
        - Bearer: []
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            properties:
              note:
                example: test note to update 2
                type: string
            type: object
      responses:
        '204':
          description: update customer note
          headers:
            access-control-allow-origin:
              type: string
            connection:
              type: string
            date:
              type: string
            x-powered-by:
              type: string
      tags:
        - customer_management
        - customer notes
      description: update customer note
      operationId: updateCustomerNote
      summary: update customer note
  /customer-management/api/customer/create:
    post:
      security:
        - Bearer: []
      consumes:
        - application/json
      produces:
        - text/plain
      parameters:
        - in: body
          name: body
          schema:
            properties:
              company:
                example: 67ec50b9caa7acb89fd66c2d
                type: string
              email:
                example: c4@mind.com
                type: string
              name:
                example: Customer 4
                type: string
              phone:
                example: '4'
                type: string
            type: object
      responses:
        '201':
          description: create customer
          headers:
            access-control-allow-origin:
              type: string
            connection:
              type: string
            content-length:
              type: string
            date:
              type: string
            etag:
              type: string
            x-powered-by:
              type: string
          schema:
            $ref: '#/definitions/CreateCustomerResponse'
      tags:
        - customer_management
        - customer
      description: create customer
      operationId: createCustomer
      summary: create customer
  /customer-management/api/customer/list:
    get:
      security:
        - Bearer: []
      consumes:
        - text/plain
      produces:
        - text/plain
      parameters:
        - description: |-
            sayfa numarasi 
            varsayilan degeri '1'
          in: query
          name: page
          type: string
        - description: |-
            sayfa basina gelecek dokuman sayisi 
            varsayilan degeri '10'
          in: query
          name: limit
          type: string
        - description: |-
            siralama secenegi 
            secenekler ('createdAt', 'name', 'email', 'phone', 'companyName')
            varsayilan: 'createdAt'
          in: query
          name: sortBy
          type: string
        - description: |-
            siralama bicimi 
            secenekler ('asc', 'desc')
            varsayilan deger 'desc'
          in: query
          name: orderBy
          type: string
        - description: sirket ismi ile arama yapamak icin
          in: query
          name: companyName
          type: string
        - description: telefon  ile arama yapamak icin
          in: query
          name: phone
          type: string
        - description: email ile arama yapamak icin
          in: query
          name: email
          type: string
        - description: id ile filtreleme yapmak icin
          in: query
          name: id
          type: string
      responses:
        '200':
          description: customer list
          headers:
            access-control-allow-origin:
              type: string
            connection:
              type: string
            content-length:
              type: string
            date:
              type: string
            etag:
              type: string
            x-powered-by:
              type: string
          schema:
            $ref: '#/definitions/CustomerListResponse'
      tags:
        - customer_management
        - customer
      description: customer list
      operationId: customerList
      summary: customer list
  /customer-management/api/customer/{id}:
    parameters:
      - description: customer id degeri
        in: path
        name: id
        required: true
        type: string
    delete:
      security:
        - Bearer: []
      consumes:
        - text/plain
      parameters:
        - in: body
          name: body
          schema:
            format: binary
            type: string
      responses:
        '204':
          description: delete customer
          headers:
            access-control-allow-origin:
              type: string
            connection:
              type: string
            date:
              type: string
            x-powered-by:
              type: string
      tags:
        - customer_management
        - customer
      description: delete customer
      operationId: deleteCustomer
      summary: delete customer
    put:
      security:
        - Bearer: []
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            properties:
              company:
                example: 67ec50b9caa7acb89fd66c2d
                type: string
              email:
                example: c5@mind.com
                type: string
              name:
                example: '5'
                type: string
              phone:
                example: '5'
                type: string
            type: object
      responses:
        '204':
          description: update customer
          headers:
            access-control-allow-origin:
              type: string
            connection:
              type: string
            date:
              type: string
            x-powered-by:
              type: string
      tags:
        - customer_management
        - customer
      description: update customer
      operationId: updateCustomer
      summary: update customer
  /sale-management/api/sales/create:
    post:
      security:
        - Bearer: []
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            properties:
              customerId:
                example: 67ec531c391523b7b17d4b81
                type: string
              date:
                example: '2025-10-27T14:30:45.123+03:00'
                type: string
              note:
                example: Ilk asama
                type: string
              totalAmount:
                example: 1
                type: number
            type: object
      responses:
        '201':
          description: create sale not note create
          headers:
            access-control-allow-origin:
              type: string
            connection:
              type: string
            content-length:
              type: string
            date:
              type: string
            etag:
              type: string
            x-powered-by:
              type: string
          schema:
            $ref: '#/definitions/saleCreateResponse'
      tags:
        - sale_management
        - sales
      description: create sale
      operationId: createSale
      summary: create sale
  /sale-management/api/sales/list:
    get:
      security:
        - Bearer: []
      produces:
        - text/plain
      parameters:
        - in: query
          name: page
          type: string
        - in: query
          name: limit
          type: string
      responses:
        '200':
          description: list sale
          headers:
            access-control-allow-origin:
              type: string
            connection:
              type: string
            content-length:
              type: string
            date:
              type: string
            etag:
              type: string
            x-powered-by:
              type: string
          schema:
            $ref: '#/definitions/saleListResponse'
      tags:
        - sale_management
        - sales
      description: list sale
      operationId: listSale
      summary: list sale
  /sale-management/api/sales/{saleId}:
    parameters:
      - in: path
        name: saleId
        required: true
        type: string
    put:
      security:
        - Bearer: []
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            properties:
              date:
                example: '2025-10-28T14:30:45.123+03:00'
                type: string
              note:
                example: reddedildi
                type: string
              status:
                example: Kapandı
                type: string
              totalAmount:
                example: 12
                type: number
            type: object
      responses:
        '204':
          description: update sale
          headers:
            access-control-allow-origin:
              type: string
            connection:
              type: string
            date:
              type: string
            x-powered-by:
              type: string
      tags:
        - sale_management
        - sales
      description: update sale
      operationId: updateSale
      summary: update sale
  /user-management/api/auth/jwt:
    get:
      consumes:
        - application/json
      produces:
        - text/plain
      parameters:
        - in: body
          name: body
          schema:
            properties:
              email:
                example: email@email.com
                type: string
              password:
                example: password
                type: string
            type: object
      responses:
        '200':
          description: jwt check
          headers:
            access-control-allow-origin:
              type: string
            Connection:
              type: string
            Content-Length:
              type: string
            Date:
              type: string
            ETag:
              type: string
            Keep-Alive:
              type: string
            X-Powered-By:
              type: string
          schema:
            $ref: '#/definitions/JWTCheckResponse'
      tags:
        - user_management
        - jwt
      description: jwt check
      operationId: jwtCheck
      summary: jwt check
  /user-management/api/auth/login:
    post:
      consumes:
        - application/json
      produces:
        - text/plain
      parameters:
        - in: body
          name: body
          schema:
            properties:
              email:
                example: admin1@mind.com
                type: string
              password:
                example: '123456'
                type: string
            type: object
      responses:
        '200':
          description: login user
          headers:
            access-control-allow-origin:
              type: string
            Connection:
              type: string
            Content-Length:
              type: string
            Date:
              type: string
            ETag:
              type: string
            Keep-Alive:
              type: string
            X-Powered-By:
              type: string
          schema:
            $ref: '#/definitions/AuthResponse'
      tags:
        - user_management
        - auth
      description: login user
      operationId: loginUser
      summary: login user
  /user-management/api/auth/register:
    post:
      consumes:
        - application/json
      produces:
        - text/plain
      parameters:
        - in: body
          name: body
          schema:
            properties:
              email:
                example: admin1@mind.com
                type: string
              name:
                example: Cihan
                type: string
              password:
                example: '123456'
                type: string
            type: object
      responses:
        '201':
          description: register user response
          headers:
            access-control-allow-origin:
              type: string
            connection:
              type: string
            content-length:
              type: string
            date:
              type: string
            etag:
              type: string
            x-powered-by:
              type: string
          schema:
            $ref: '#/definitions/RegisterUserResponse'
      tags:
        - user_management
        - auth
      description: register user
      operationId: registerUser
      summary: register user
  /user-management/api/users/list:
    get:
      security:
        - Bearer: []
      consumes:
        - text/plain
      produces:
        - text/plain
      parameters:
        - description: |-
            sayfa numarasi 
            varsayilan degeri '1'
          in: query
          name: page
          type: string
        - description: |-
            sayfa basina gelecek dokuman sayisi 
            varsayilan degeri '10'
          in: query
          name: limit
          type: string
        - description: arama yapilacak kelimeler
          in: query
          name: keyword
          type: string
        - description: |-
            siralama secenegi 
            secenekler ('createdAt', 'name', 'email') 
            varsayilan: 'createdAt'
          in: query
          name: sortBy
          type: string
        - description: |-
            siralama bicimi 
            secenekler ('asc', 'desc')
            varsayilan deger 'desc'
          in: query
          name: orderBy
          type: string
        - in: body
          name: body
          schema:
            format: binary
            type: string
      responses:
        '200':
          description: user list
          headers:
            access-control-allow-origin:
              type: string
            Connection:
              type: string
            Content-Length:
              type: string
            Date:
              type: string
            ETag:
              type: string
            Keep-Alive:
              type: string
            X-Powered-By:
              type: string
          schema:
            $ref: '#/definitions/UserListResponse'
      tags:
        - user_management
        - user
      description: user list
      operationId: userList
      summary: user list
  /user-management/api/users/{id}:
    parameters:
      - description: user _id degeri
        in: path
        name: id
        required: true
        type: string
    delete:
      security:
        - Bearer: []
      parameters: []
      responses:
        '204':
          description: delete user
          headers:
            access-control-allow-origin:
              type: string
            connection:
              type: string
            date:
              type: string
            x-powered-by:
              type: string
      tags:
        - user_management
        - user
      description: delete user
      operationId: deleteUser
      summary: delete user
    get:
      security:
        - Bearer: []
      consumes:
        - text/plain
      produces:
        - text/plain
      responses:
        '200':
          description: get user by id
          headers:
            access-control-allow-origin:
              type: string
            connection:
              type: string
            content-length:
              type: string
            date:
              type: string
            etag:
              type: string
            x-powered-by:
              type: string
          schema:
            $ref: '#/definitions/RegisterUserResponse'
      tags:
        - user_management
        - user
      description: get user by id
      operationId: getUserById
      summary: get user by id
    put:
      security:
        - Bearer: []
      consumes:
        - text/plain
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/updateUserRequest'
      responses:
        '204':
          description: update user
          headers:
            access-control-allow-origin:
              type: string
            connection:
              type: string
            date:
              type: string
            x-powered-by:
              type: string
      tags:
        - user_management
        - user
      description: update user
      operationId: updateUser
      summary: update user
definitions:
    RegisterUserResponse:
      type: "object"
      properties:
        user:
          type: "object"
          properties:
            userId:
              type: "string"
            name:
              type: "string"
            email:
              type: "string"
    AuthResponse:
      type: object
      description: "Yetkilendirme yanıtı nesnesi. Kullanıcı bilgilerini ve JWT token içerir."
      properties:
        token:
          type: string
          description: "Bearer JWT token, yetkilendirilmiş işlemler için gereklidir."
        user:
          type: object
          description: "Kullanıcı bilgileri."
          properties:
            _id:
              type: string
              description: "User ID."
            name:
              type: string
              description: "User adı."
            email:
              type: string
              description: "User e-posta adresi."
            role:
              type: string
              description: "User rolü."
    User:
      type: object
      description: "Kullanıcı bilgilerini içeren nesne."
      properties:
        _id:
          type: string
          description: "User ID."
        name:
          type: string
          description: "User adı."
        email:
          type: string
          description: "User e-posta adresi."
        role:
          type: string
          description: "User rolü."
        isActive:
          type: boolean
          description: "Kullanıcının aktif olup olmadığını belirtir."
        createdAt:
          type: string
          format: date-time
          description: "Kullanıcının oluşturulma tarihi."
    Pagination:
      type: object
      description: "Sayfalama bilgilerini içeren nesne."
      properties:
        total:
          type: integer
          description: "Toplam kullanıcı sayısı."
        page:
          type: integer
          description: "Mevcut sayfa numarası."
        limit:
          type: integer
          description: "Sayfa başına gösterilecek kullanıcı sayısı."
        totalPage:
          type: integer
          description: "Toplam sayfa sayısı."
    UserListResponse:
      type: object
      description: "Kullanıcı listesini ve sayfalama bilgilerini içeren yanıt nesnesi."
      properties:
        data:
          type: array
          description: "Kullanıcı listesi."
          items:
            $ref: "#/definitions/User"
        pagination:
          $ref: "#/definitions/Pagination"
    JWTCheckResponse:
      type: object
      description: "JWT token doğrulama yanıtı. Geçerli token'e sahip kullanıcının bilgilerini içerir."
      properties:
        user:
          $ref: "#/definitions/User"
    Customer:
      type: object
      description: "Müşteri bilgilerini içeren nesne."
      properties:
        _id:
          type: string
          description: "Müşteri ID."
        name:
          type: string
          description: "Müşteri adı."
        email:
          type: string
          description: "Müşteri e-posta adresi."
        phone:
          type: string
          description: "Müşteri telefon numarası."
        createdAt:
          type: string
          format: date-time
          description: "Müşterinin oluşturulma tarihi."
        customerId:
          type: string
          description: "Müşteri ID'si."
    CreateCustomerResponse:
      type: object
      description: "Yeni oluşturulan müşteriyi içeren yanıt nesnesi."
      properties:
        customer:
          $ref: "#/definitions/Customer"
    CustomerListResponse:
      type: object
      description: "Müşteri listesini ve sayfalama bilgilerini içeren yanıt nesnesi."
      properties:
        data:
          type: array
          description: "Müşteri listesi."
          items:
            $ref: "#/definitions/Customer"
        pagination:
          $ref: "#/definitions/Pagination"
    Company:
      type: object
      description: "Şirket bilgilerini içeren nesne."
      properties:
        _id:
          type: string
          description: "Şirket ID'si."
        companyId:
          type: string
          description: "Şirket ID'si."
        name:
          type: string
          description: "Şirket adı."
    CompanyListResponse:
      type: object
      description: "Şirketler listesini ve sayfalama bilgilerini içeren yanıt nesnesi."
      properties:
        companies:
          type: array
          description: "Şirket listesi."
          items:
            $ref: "#/definitions/Company"
        pagination:
          $ref: "#/definitions/Pagination"
    CreateCustomerNoteResponse:
      type: object
      description: "Yeni oluşturulan müşteri notunu içeren yanıt nesnesi."
      properties:
        note:
          type: object
          description: "Oluşturulan müşteri notu."
          properties:
            _id:
              type: string
              description: "Oluşturulan notun ID'si."
            note:
              type: string
              description: "Oluşturulan notun içeriği."
            noteId:
              type: string
              description: "Oluşturulan notun ID'si."
    SaleLog:
      type: object
      description: "Satış loglarını temsil eden nesne."
      properties:
        _id:
          type: integer
          description: "Satış logu ID'si."
        status:
          type: string
          description: "Satış logu durumu."
        totalAmount:
          type: string
          description: "Satış tutarı."
        createdAt:
          type: string
          format: date-time
          description: "Satış logunun oluşturulma tarihi."
        saleId:
          type: integer
          description: "Satış ID'si."
    Sale:
      type: object
      description: "Satışı temsil eden nesne."
      properties:
        _id:
          type: integer
          description: "Satış ID'si."
        saleId:
          type: integer
          description: "Satış ID'si."
        status:
          type: string
          description: "Satış durumu."
        notes:
          type: array
          description: "Satışa ait notlar."
          items:
            $ref: "#/definitions/SaleNote"
        saleLogs:
          type: array
          description: "Satış logları."
          items:
            $ref: "#/definitions/SaleLog"
    SaleNote:
      type: object
      description: "Satışa ait notları temsil eden nesne."
      properties:
        _id:
          type: integer
          description: "Satış notu ID'si."
        note:
          type: string
          description: "Satış notunun içeriği."
        date:
          type: string
          format: date-time
          description: "Satış sırasında tutulan tarih."
        createdAt:
          type: string
          format: date-time
          description: "Satış notunun oluşturulma tarihi."
        saleId:
          type: integer
          description: "Satış ID'si."
    saleCreateResponse:
      type: object
      description: "Yeni oluşturulan satış yanıt nesnesi."
      properties:
        _id:
          type: integer
          description: "Satış ID'si."
        saleId:
          type: integer
          description: "Satış ID'si."
        status:
          type: string
          description: "Satış durumu."
        notes:
          type: array
          description: "Satışa ait notlar."
          items:
            $ref: "#/definitions/SaleNote"
        saleLogs:
          type: array
          description: "Satış logları."
          items:
            $ref: "#/definitions/SaleLog"
    saleListResponse:
      type: object
      description: "Satışların listelendiği yanıt nesnesi."
      properties:
        sales:
          type: array
          description: "Satışların listesi."
          items:
            $ref: "#/definitions/Sale"
        pagination:
          type: object
          description: "Sayfalama bilgisi."
          properties:
            total:
              type: integer
              description: "Filtrede toplam kaç kayıt var."
            page:
              type: integer
              description: "Şu anda gösterilen sayfa."
            limit:
              type: integer
              description: "Sayfa başına gösterilen kayıt sayısı."
            totalPage:
              type: integer
              description: "Toplam sayfa sayısı."
    updateUserRequest:
      type: object
      description: "Kullanıcı bilgilerini güncellemek için kullanılan istek nesnesi."
      properties:
        name:
          type: string
          description: "Kullanıcı adı."
        email:
          type: string
          format: email
          description: "Kullanıcının e-posta adresi."
        role:
          type: string
          enum: ["Admin", "Satış Temsilcisi", "Depo", "Finans", "Müşteri Hizmetleri", "İnsan Kaynakları", "Bilgi İşlem", "Atanmamış Rol"]
          description: "Kullanıcının rolü. Bir kullanıcı rolü, yukarıdaki seçeneklerden biri olmalıdır."
        isActive:
          type: boolean
          description: "Kullanıcı aktif mi?"
        password:
          type: string
          description: "Kullanıcı parolası."
tags:
  - name: user_management
    description: "Kullanıcı işlemleriyle ilgili API'ler burada bulunur"
  - name: auth
    description: "Kullanıcı  olusturma ve giris yapma"
  - name: user
    description: "Kullanıcı işlemleriyle ilgili API'ler burada bulunur"
  - name: jwt
    description: "JWT ile ilgili API'ler burada bulunur"
  - name: customer_management
    description: "Musteri ile ilgili API'ler burada bulunur"
  - name: customer
    description: "Musteri CRUD API'ler burada bulunur"
  - name: company
    description: "Musteri Sirketleri ile ilgili API'ler burada bulunur"
  - name: customer notes
    description: "Musteri Notlari ile ilgili API'ler burada bulunur"
  - name: sale_management
    description: "Satis ile ilgili API'ler burada bulunur"
  - name: sales
    description: "Satis CRUD API'ler burada bulunur"